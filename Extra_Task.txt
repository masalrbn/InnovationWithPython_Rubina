1. Create a list of given structure and get the Access list as provided below:
x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]
Access list: [1, 2, 3, 4]Access list: [600, 700]
Access list: [100, 300, 500, 600, 800]
Access list: [[800, 700, 600, [1, 2, 3, 4, 5, [10, 20, 30, 40, 50], 6, 7, 8, 9], 500, 400, 300, 200, 100]]
Access list: [10]
Access list: [ ]

x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]
print(x[5][0:4])
print(x[-3:-1])
print(x[0:9:2])
print(x[::-1])
print(x[5][5][:1])
print(x[5][5][:0])

Output:

[1, 2, 3, 4]
[600, 700]
[100, 300, 500, 600, 800]
[800, 700, 600, [1, 2, 3, 4, 5, [10, 20, 30, 40, 50], 6, 7, 8, 9], 500, 400, 300, 200, 100]
[10]
[]

-------------------------------------------------------------------------------------------------------------------------

2. Create a list of thousand numbers using range and xrange and see the difference between each
other.

xrange is used only in python 2.x. 
The range() function in python 3.x is just a re-implementation of the xrange() of python 2.x. 
It actually works the same way as the xrange does.

Following program is executed without any error in python2.x and prints the list of numbers from 1-1000

num_list = [x for x in range(1,1001)]
print("Range:",num_list)

num_list = [x for x in xrange(1,1001)]
print("xrange: ",num_list)

Whereas, same code generates list of numbers 1-1000 using range function but gives following error when xrange is used,
name 'xrange' is not defined

-------------------------------------------------------------------------------------------------------------------------

3. How Tuple is beneficial as compared to the list?

Tuple is faster than lists and its element can't be removed or changed as compared to list. They are memory eficient as well
Some tuples can be used as dictionary keys (specifically, tuples that contain immutable values like strings, numbers, and other 
tuples).

-------------------------------------------------------------------------------------------------------------------------

4. Write a program in Python to iterate through the list of numbers in the range of 1,100 and print
the number which is divisible by 3 and is a multiple of 2.

l = list(filter(lambda a: a % 3 == 0 and a % 2 == 0, range(1, 101)))
print(l)

Output:

[6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90, 96]

-------------------------------------------------------------------------------------------------------------------------

5. Write a program in Python to reverse a string and print only the vowel alphabet if it exists in the
string with their index.

str = "consultadd"
rev = str[::-1]
print("Reversed string:",rev)
vowel = ['a', 'e', 'i', 'o', 'u']
print("Vowels in the string and their index are:")
for i in rev:
    if i in vowel:
        print(i, rev.index(i))
		
		
Output:

Reversed string: ddatlusnoc
Vowels in the string and their index are:
a 2
u 5
o 8

-------------------------------------------------------------------------------------------------------------------------

6. Write a program in Python to iterate through the string “hello my name is abcde” and print the
string which is having an even length.

str = "hello my name is Rubina. I love Python"
l= str.split(" ")

new_list = filter(lambda x: len(x) % 2 == 0, l)

res = " ".join(list(new_list))
print(res)

Output:

my name is love Python

-------------------------------------------------------------------------------------------------------------------------

7. Write a program in python to print the pair of numbers whose sum is equal to the result
number that is let's say 8.
x=[1,2,3,4,5,6,7,8,9,-1]

x=[1,2,3,4,5,6,7,8,9,-1]
x.sort()
target = 8
res = []
for i in range(len(x)):
    for j in range(i+1,len(x)):
        if x[i] + x[j] == target:
            res.append((x[i],x[j]))
print(res)

Output:

[(-1, 9), (1, 7), (2, 6), (3, 5)]

-------------------------------------------------------------------------------------------------------------------------

8. Write a program in Python to complete the following task:
Create two lists such as even_list and odd_list
Ask user to enter a number in the range of 1,50 and make sure if the entered number is
even, append it to the even_list and if the entered number is odd append it to the odd_list.
Keep that in mind you can only add 5 items in each list
Make sure once you enter all the 5 elements, calculate the sum of the list and return the
maximum of the list.

even_list = []
odd_list = []
while True:
    inp = int(input("Enter a number between 1 and 50, both inclusive:" ))
    res = 0
    if inp % 2 == 0:
        even_list.append(inp)
        if len(even_list) == 5:
            print(even_list)
            for a in even_list:
                res = res + a
            print("Sum of the numbers in the list:",res)
            print("Max number in the list:", max(even_list))
            break

    else:
        odd_list.append(inp)
        if len(odd_list) == 5:
            print(odd_list)
            for b in odd_list:
                res = res + b
            print("Sum of the numbers in the list:",res)
            print("Max number in the list:",max(odd_list))
            break
			
Output:

Enter a number between 1 and 50, both inclusive:1
Enter a number between 1 and 50, both inclusive:2
Enter a number between 1 and 50, both inclusive:3
Enter a number between 1 and 50, both inclusive:4
Enter a number between 1 and 50, both inclusive:5
Enter a number between 1 and 50, both inclusive:6
Enter a number between 1 and 50, both inclusive:7
Enter a number between 1 and 50, both inclusive:8
Enter a number between 1 and 50, both inclusive:9
[1, 3, 5, 7, 9]
Sum of the numbers in the list: 25
Max number in the list: 9

-------------------------------------------------------------------------------------------------------------------------

9. Write a program to find out the occurrence of a specific character from an alphanumeric string.
Sample input: 12abcbacbaba344ab
Expected output: a=5 b=5 c=2
NOTE: Make sure to avoid counting the occurrence of numeric values in the string.

inp = "12abcbacbaba344ab"
unique = set(inp)
output= ""
char_count = 0
for char in unique:
    if (ord(char) in range(97, 123)) or (ord(char) in range(65,91)):
        char_list = filter(lambda x: x == char, inp)
        char_res = char + "=" + str(len(list(char_list)))
        output += char_res+" "

print(output)

Output:

b=5 c=2 a=5 

-------------------------------------------------------------------------------------------------------------------------

10. Generate and print another tuple whose values are even numbers in the given tuple
(1,2,3,4,5,6,7,8,9,10).

t = (1,2,3,4,5,6,7,8,9,10)

l = (filter(lambda a: a % 2 == 0, t))
print(tuple(l))

Output:

(2, 4, 6, 8, 10)
