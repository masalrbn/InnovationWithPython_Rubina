1.	Write a program in Python to perform the following operation:
If a number is divisible by 3 it should print “Consultadd” as a string 
If a number is divisible by 5 it should print “Python Training” as a string 
If a number is divisible by both 3 and 5 it should print “Consultadd - Python Training” as a string.

a = 45

if a % 3 == 0 and a % 5 == 0:
    print("Consultadd - Python Training")

elif a % 3 == 0:
    print("Consultadd")

elif a % 5 == 0:
    print("Python Training")


2.	Write a program in Python to perform the following operator based task:
Ask user to choose the following option first: 
If User Enter 1 - Addition 
If User Enter 2 - Subtraction 
If User Enter 3 - Division 
If User Enter 4 - Multiplication 
If User Enter 5 - Average 
Ask user to enter two numbers and keep those numbers in variables num1 and num2 respectively for the first 4 options mentioned above. 
Ask the user to enter two more numbers as first and second for calculating the average as soon as the user chooses an option 5. 
At the end if the answer of any operation is Negative print a statement saying “NEGATIVE” NOTE: At a time a user can only perform one action.

inp = int(input("Choose one of the following options: """"
 1- Addition. 
 2- Subtraction.
 3- Division.
 4- Multiplication.
 5- Average.
    """))

print("You chose: ", inp)

num1 = int(input("Enter a number: "))
num2 = int(input("Enter a number: "))


if inp ==1:
    result=num1+num2
    print("Sum of {} and {} :" .format(num1,num2), result)

elif inp ==2:
    result=num1-num2
    print("Subtraction of {} and {} :" .format(num1,num2), result)

elif inp ==3:
    result=num1/num2
    print("Division of {} by {} :" .format(num1,num2), result)

elif inp ==4:
    result=num1*num2
    print("Multiplication of {} and {} :" .format(num1,num2), result)

elif inp ==5:
    first=int(input("Enter a number: "))
    second=int(input("Enter a number: "))
    result=(num1+num2+first+second)/4
    print("Average of {}, {}, {} and {} :" .format(num1,num2,first,second), result)

else:
    print("invalid input")

if result < 0:
    print("NEGATIVE")

3.	Write a program in Python to implement the given flowchart:
	 
	
a,b,c = 10,20,30
avg= (a+b+c)/3
print("avg =", avg)
if avg>a and avg>b and avg>c:
    print("avg is higher than a,b,c")
elif avg>a and avg>b:
    print("avg is higher than a,b,c")
elif avg>a and avg>c:
    print("avg is higher than a,c")
elif avg>b and avg>c:
    print("avg is higher than b,c")
elif avg>a:
    print("avg is just higher than a")
elif avg>b:
    print("avg is just higher than b")
elif avg>c:
    print("avg is just higher than c")
else:
    print("avg is smaller than a,b,c")


4.	Write a program in Python to break and continue if the following cases occurs:
•	If user enters a negative number just break the loop and print “It’s Over” 
•	If user enters a positive number just continue in the loop and print “Good Going”
	
inp = eval(input("Enter a number: "))

while True:
    if inp < 0:
        print("It's Over")
        break
    else:
        print("Good Going")
        continue

5.	Write a program in Python which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200.

	for i in range (2000,3201):

    if i % 7 == 0:
        if i % 10 == 0 or i % 10 == 5:
            continue
        else:
            print(i)

6.	What is the output of the following code examples?


x=123
for i in x:
    print(i)

Answer: Type Error: ‘int’ object is not iterable



i = 0
while i <5:
    print(i)
    i += 1
    if i == 3:
        break
    else:
        print("error")
		
Answer:
0
error
1
error
2

count = 0
while True:
    print(count)
    count += 1
    if count >= 5:
        break
		
Answer:
0
1
2
3
4


7. Write a program that prints all the numbers from 0 to 6 except 3 and 6. 
Expected output: 0 1 2 4 5
Note: Use ‘continue’ statement

for i in range(0,6):
    if i == 3:
        continue
    print(i)
	
	
8. Write a program that accepts a string as an input from the user and calculate the number of digits
and letters. 
Sample input: consul72 
Expected output: Letters 6 Digits 2

inp = input("Enter a string with letters and digits: ")
digits,letters=0,0
for i in inp:
    if i.isdigit():
        digits=digits+1
    elif i.isalpha():
        letters=letters+1
    else:
        pass
print("Letters", letters)
print("Digits", digits)


9. Read the two parts of the question below:
Write a program such that it asks users to “guess the lucky number”. If the correct number is
guessed the program stops, otherwise it continues forever.

number = 4
while True:
    guess_num = int(input("Guess the lucky number: "))
    if guess_num == number:
        print("You guessed it correct!!!!")
        break
    else:
        continue
		
		
Modify the program so that it asks users whether they want to guess again each time. Use two
variables, ‘number’ for the number and ‘answer’ for the answer to the question whether they want
to continue guessing. The program stops if the user guesses the correct number or answers “no”. (
The program continues as long as a user has not answered “no” and has not guessed the correct
number)

number = 4
while True:
    guess_num = int(input("Guess the lucky number: "))
    if guess_num == number:
        print("You guessed it correct!!!!")
        break
    answer = input("Do you want to continue guessing? yes / no: ")
    if answer == 'no':
        break


		
10. Write a program that asks five times to guess the lucky number. Use a while loop and a counter,

correct_Number = 8
counter = 5
while counter >= 1 :

    guess_number = int(input("Guess a number:" ))
    if counter == 1 and guess_number != correct_Number:
        print("Game Over!")
        break
    if guess_number == correct_Number:
        print("Good guess!")
        
    else:
        print("Try again")
        print("You have {} times remaining." .format(counter-1))

    counter -= 1

	
	
11.In the previous question, insert break after the “Good guess!” print statement. break will terminate
the while loop so that users do not have to continue guessing after they found the number. If the user
does not guess the number at all, print “Sorry but that was not very successful”.

correct_Number = 8
counter = 5
while counter >= 1 :

    guess_number = int(input("Guess a number:" ))
    if counter == 1 and guess_number != correct_Number:
        print("Sorry but that was not very successful")
        print("Game Over!")
        break
    if guess_number == correct_Number:
        print("Good guess!")
        break
    else:
        print("Try again")
        print("You have {} times remaining." .format(counter-1))

    counter -= 1











	

